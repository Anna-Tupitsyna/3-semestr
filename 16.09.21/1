1. Исходные данные:
программа, в цикле 2 миллиона раз увеличивающая некоторую переменную на 1.
#include <iostream>
#include <cstdlib>
#include <omp.h>
using namespace std;
int main() {
   double t = omp_get_wtime(); // omp_get_wtime() - библиотечная функция, возвращающая время в секундах.
   int sum = 0;
   for(int i = 0; i<1000000; i++) {
     sum++;
     sum++;
   }
   cout<<"Sum: "<<sum<<endl;
   cout<<"Time: "<<omp_get_wtime()-t<<endl;
   return EXIT_SUCCESS;
}

2. Параллельная программа
#include <iostream>
#include <cstdlib>
#include <omp.h>
using namespace std;
int main() {
   double t = omp_get_wtime();
   int sum = 0;
#pragma omp parallel sections reduction(+:sum) 
   {
#pragma omp section
      {
         for(int i = 0; i<1000000; i++)
             sum++;
      }
#pragma omp section
      {
         for(int i = 0; i<1000000; i++)
             sum++;
      }
   }
   cout<<"Sum: "<<sum<<endl;
   cout<<"Time: "<<omp_get_wtime()-t<<endl;
   return EXIT_SUCCESS;
}

